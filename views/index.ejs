<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SISP - Sistema de Inicio de Sesión</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f0f2f5;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            background-image: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            transition: background-image 0.5s ease;
        }
        
        body.dark-mode {
            background-image: linear-gradient(135deg, #2c3e50 0%, #1a1a2e 100%);
        }
        
        .container {
            background-color: white;
            border-radius: 12px;
            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
            padding: 40px;
            width: 800px;
            max-width: 90%;
            transition: all 0.3s ease;
        }
        
        .dark-mode .container {
            background-color: #1e272e;
            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);
        }
        
        header {
            text-align: center;
            margin-bottom: 30px;
            position: relative;
        }
        
        .theme-toggle {
            position: absolute;
            top: 0;
            right: 0;
            background: none;
            border: none;
            font-size: 20px;
            color: #3498db;
            cursor: pointer;
            transition: transform 0.3s ease;
        }
        
        .theme-toggle:hover {
            transform: rotate(30deg);
        }
        
        .dark-mode .theme-toggle {
            color: #f39c12;
        }
        
        .logo {
            font-size: 32px;
            font-weight: 700;
            color: #3498db;
            margin-bottom: 10px;
            position: relative;
            display: inline-block;
        }
        
        .logo::after {
            content: '';
            position: absolute;
            width: 0;
            height: 3px;
            bottom: 0;
            left: 50%;
            background-color: #3498db;
            transition: all 0.3s ease;
        }
        
        .logo:hover::after {
            width: 100%;
            left: 0;
        }
        
        .dark-mode .logo {
            color: #f39c12;
        }
        
        .dark-mode .logo::after {
            background-color: #f39c12;
        }
        
        .logo span {
            color: #2c3e50;
            font-weight: 300;
            transition: color 0.3s ease;
        }
        
        .dark-mode .logo span {
            color: #ecf0f1;
        }
        
        h1 {
            color: #2c3e50;
            margin: 0;
            font-weight: 600;
            transition: color 0.3s ease;
        }
        
        .dark-mode h1 {
            color: #ecf0f1;
        }
        
        .subtitle {
            color: #7f8c8d;
            margin-top: 10px;
            transition: color 0.3s ease;
        }
        
        .dark-mode .subtitle {
            color: #bdc3c7;
        }
        
        .card-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-top: 30px;
        }
        
        .card {
            background-color: #f8fafc;
            border-radius: 8px;
            padding: 20px;
            transition: all 0.3s ease;
            border: 1px solid #e2e8f0;
            position: relative;
            overflow: hidden;
        }
        
        .dark-mode .card {
            background-color: #2d3436;
            border-color: #4a5568;
        }
        
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            border-color: #3498db;
        }
        
        .dark-mode .card:hover {
            border-color: #f39c12;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
        }
        
        .card-icon {
            position: absolute;
            top: 15px;
            right: 15px;
            font-size: 24px;
            color: #3498db;
            opacity: 0.2;
            transition: all 0.3s ease;
        }
        
        .dark-mode .card-icon {
            color: #f39c12;
        }
        
        .card:hover .card-icon {
            opacity: 1;
            transform: scale(1.2);
        }
        
        .card-title {
            font-size: 18px;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 10px;
            transition: color 0.3s ease;
        }
        
        .dark-mode .card-title {
            color: #ecf0f1;
        }
        
        .card-content {
            color: #7f8c8d;
            font-size: 14px;
            line-height: 1.6;
            transition: color 0.3s ease;
        }
        
        .dark-mode .card-content {
            color: #bdc3c7;
        }
        
        .card-link {
            display: inline-block;
            margin-top: 15px;
            color: #3498db;
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s ease;
            position: relative;
        }
        
        .dark-mode .card-link {
            color: #f39c12;
        }
        
        .card-link::after {
            content: '';
            position: absolute;
            width: 0;
            height: 2px;
            bottom: -2px;
            left: 0;
            background-color: #3498db;
            transition: width 0.3s ease;
        }
        
        .dark-mode .card-link::after {
            background-color: #f39c12;
        }
        
        .card-link:hover {
            color: #2980b9;
            transform: translateX(5px);
        }
        
        .dark-mode .card-link:hover {
            color: #e67e22;
        }
        
        .card-link:hover::after {
            width: 100%;
        }
        
        .api-status {
            background-color: #e8f5e9;
            border-radius: 8px;
            padding: 15px;
            margin-top: 30px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            transition: background-color 0.3s ease;
        }
        
        .dark-mode .api-status {
            background-color: #2d3436;
        }
        
        .status-indicator {
            display: flex;
            align-items: center;
        }
        
        .status-dot {
            width: 12px;
            height: 12px;
            background-color: #4caf50;
            border-radius: 50%;
            margin-right: 8px;
            position: relative;
        }
        
        .status-dot::after {
            content: '';
            position: absolute;
            top: -4px;
            left: -4px;
            right: -4px;
            bottom: -4px;
            border-radius: 50%;
            border: 2px solid #4caf50;
            animation: pulse 1.5s infinite;
        }
        
        @keyframes pulse {
            0% {
                transform: scale(0.95);
                opacity: 1;
            }
            70% {
                transform: scale(1.3);
                opacity: 0;
            }
            100% {
                transform: scale(0.95);
                opacity: 0;
            }
        }
        
        .status-text {
            color: #2e7d32;
            font-weight: 500;
            transition: color 0.3s ease;
        }
        
        .dark-mode .status-text {
            color: #4caf50;
        }
        
        .api-version {
            color: #7f8c8d;
            transition: color 0.3s ease;
        }
        
        .dark-mode .api-version {
            color: #bdc3c7;
        }
        
        footer {
            text-align: center;
            margin-top: 40px;
            color: #7f8c8d;
            font-size: 14px;
            transition: color 0.3s ease;
        }
        
        .dark-mode footer {
            color: #bdc3c7;
        }
        
        .stats-container {
            display: flex;
            justify-content: space-around;
            margin-top: 30px;
            text-align: center;
        }
        
        .stat-item {
            padding: 15px;
        }
        
        .stat-value {
            font-size: 28px;
            font-weight: 700;
            color: #3498db;
            margin-bottom: 5px;
            transition: all 0.3s ease;
        }
        
        .dark-mode .stat-value {
            color: #f39c12;
        }
        
        .stat-label {
            color: #7f8c8d;
            font-size: 14px;
            transition: color 0.3s ease;
        }
        
        .dark-mode .stat-label {
            color: #bdc3c7;
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <button id="themeToggle" class="theme-toggle" title="Cambiar tema">
                <i class="fas fa-moon"></i>
            </button>
            <div class="logo">SISP<span>Admin</span></div>
            <h1>Sistema de Inicio de Sesión</h1>
            <p class="subtitle">API de autenticación y gestión de usuarios</p>
        </header>

        <div class="stats-container">
            <div class="stat-item">
                <div class="stat-value" id="uptime">99.9%</div>
                <div class="stat-label">Disponibilidad</div>
            </div>
            <div class="stat-item">
                <div class="stat-value" id="requests">0</div>
                <div class="stat-label">Solicitudes</div>
            </div>
            <div class="stat-item">
                <div class="stat-value" id="users">0</div>
                <div class="stat-label">Usuarios</div>
            </div>
        </div>

        <div class="card-container">
            <div class="card">
                <i class="fas fa-key card-icon"></i>
                <div class="card-title">Autenticación</div>
                <div class="card-content">
                    Gestión de inicio de sesión, tokens JWT y control de acceso basado en roles.
                </div>
                <a href="/api/auth" class="card-link">Documentación API Auth →</a>
            </div>
            
            <div class="card">
                <i class="fas fa-users card-icon"></i>
                <div class="card-title">Gestión de Usuarios</div>
                <div class="card-content">
                    Creación, actualización y eliminación de usuarios con soporte para imágenes de perfil.
                </div>
                <a href="/api/users" class="card-link">Documentación API Users →</a>
            </div>
            
            <div class="card">
                <i class="fas fa-cogs card-icon"></i>
                <div class="card-title">Instalación</div>
                <div class="card-content">
                    Configuración inicial del sistema y creación del usuario administrador.
                </div>
                <a href="/install" class="card-link">Configurar Sistema →</a>
            </div>
        </div>

        <div class="api-status">
            <div class="status-indicator">
                <div class="status-dot"></div>
                <div class="status-text">API en funcionamiento</div>
            </div>
            <div class="api-version">Versión 1.0.0</div>
        </div>

        <footer>
            &copy; <%= new Date().getFullYear() %> SISP - Sistema de Inicio de Sesión
        </footer>
    </div>

    <script>
        // Theme toggle functionality
        const themeToggle = document.getElementById('themeToggle');
        const body = document.body;
        const themeIcon = themeToggle.querySelector('i');
        
        // Check for saved theme preference
        const savedTheme = localStorage.getItem('theme');
        if (savedTheme === 'dark') {
            body.classList.add('dark-mode');
            themeIcon.classList.remove('fa-moon');
            themeIcon.classList.add('fa-sun');
        }
        
        themeToggle.addEventListener('click', () => {
            body.classList.toggle('dark-mode');
            
            if (body.classList.contains('dark-mode')) {
                themeIcon.classList.remove('fa-moon');
                themeIcon.classList.add('fa-sun');
                localStorage.setItem('theme', 'dark');
            } else {
                themeIcon.classList.remove('fa-sun');
                themeIcon.classList.add('fa-moon');
                localStorage.setItem('theme', 'light');
            }
        });
        
        // Simulate API requests counter
        const requestsCounter = document.getElementById('requests');
        let requestCount = 0;
        
        function incrementRequests() {
            requestCount += Math.floor(Math.random() * 5) + 1;
            requestsCounter.textContent = requestCount.toLocaleString();
            setTimeout(incrementRequests, Math.random() * 3000 + 1000);
        }
        
        // Simulate user count
        const usersCounter = document.getElementById('users');
        
        function fetchUserCount() {
            // In a real app, this would be an API call
            // For demo, we'll just use a random number
            const userCount = Math.floor(Math.random() * 100) + 50;
            usersCounter.textContent = userCount.toLocaleString();
        }
        
        // Server uptime calculation
        const uptimeElement = document.getElementById('uptime');
        const startTime = new Date();
        
        function updateUptime() {
            const now = new Date();
            const diff = now - startTime;
            
            // Calculate days, hours, minutes
            const days = Math.floor(diff / (1000 * 60 * 60 * 24));
            const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));
            
            uptimeElement.textContent = `${days}d ${hours}h ${minutes}m`;
            setTimeout(updateUptime, 60000); // Update every minute
        }
        
        // Memory usage simulation (more realistic)
        const memoryElement = document.getElementById('memory');
        
        function updateMemory() {
            // Base memory usage (50-150MB) + random fluctuation
            const baseMemory = 80;
            const fluctuation = Math.floor(Math.random() * 70);
            const memory = baseMemory + fluctuation;
            
            memoryElement.textContent = `${memory} MB`;
            setTimeout(updateMemory, 5000); // Update every 5 seconds
        }
        
        // Count API endpoints
        const endpointsElement = document.getElementById('endpoints');
        
        function countEndpoints() {
            // Count actual endpoints from your API
            const endpoints = [
                // Auth endpoints
                '/api/auth/login',
                '/api/auth/refresh',
                '/api/auth/me',
                
                // User endpoints
                '/api/users',
                '/api/users/:id',
                '/api/users/:id/photo',
                
                // Install endpoints
                '/install/status',
                '/install/setup'
            ];
            
            // Animate counting up
            let count = 0;
            const interval = setInterval(() => {
                count++;
                endpointsElement.textContent = count;
                if (count >= endpoints.length) {
                    clearInterval(interval);
                }
            }, 100);
        }
        
        // Initialize stats
        document.addEventListener('DOMContentLoaded', () => {
            updateUptime();
            updateMemory();
            countEndpoints();
        });
    </script>
</body>
</html>